C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN ..\Output\screen.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE ..\BSP\Src\screen.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Drivers
                    -;..\BSP\Inc;..\Core\Inc;..\Emembed\Inc;..\Middlewares;..\SYSTEM) DEBUG OBJECTEXTEND PRINT(.\Listings\screen.lst) OBJECT(
                    -..\Output\screen.obj)

line level    source

   1          #include "screen.h"
   2          
   3          enum ADDR
   4          {
   5              ADDR_03,ADDR_06,ADDR_07,ADDR_0A,ADDR_0B,ADDR_0E,ADDR_0F
   6          };
   7          
   8          static uint8_t value_03 = 0;  //该地址的值
   9          static uint8_t value_06 = 0;
  10          static uint8_t value_07 = 0;
  11          static uint8_t value_0A = 0;
  12          static uint8_t value_0B = 0;
  13          static uint8_t value_0E = 0;
  14          static uint8_t value_0F = 0; 
  15           
  16          static uint8_t addr_tab[7] = { 0xc3,0xc6,0xc7,0xca,0xcb,0xce,0xcf};
  17          
  18          static uint8_t num_tab[10] = {0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,0xF7,0xB7};
  19                               /*  0    1    2    3    4    5    6    7    8    9  */
  20          
  21          void lcd_init()
  22          {
  23   1          TM1722_STB=1;                   //端口配置初始化
  24   1          TM1722_CLK=1;
  25   1          TM1722_DIO=1;
  26   1          TM1722_Write_Byte(0x00);        //工作模式
  27   1          TM1722_STB=1;
  28   1          TM1722_Write_Byte(0x44);        //固定地址模式
  29   1          TM1722_STB=1;
  30   1          
  31   1          lcd_clear();
  32   1          
  33   1          lcd_display();
  34   1      }
  35          
  36          void lcd_clear()  //清显示缓存
  37          {
  38   1          uint8_t i;
  39   1                       
  40   1          for(i=0;i<7;i++)
  41   1          {
  42   2              TM1722_Write_Byte(addr_tab[i]);
  43   2              TM1722_Write_Byte(0);
  44   2              TM1722_STB=1;    
  45   2          }
  46   1      }
  47          
  48          void lcd_display()  //显示开
  49          {
  50   1          TM1722_Write_Byte(0x93); 
  51   1          TM1722_STB=1;
  52   1      }
  53          
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 2   

  54          void lcd_write_val(uint8_t addr,uint8_t dat)
  55          {
  56   1          TM1722_Write_Byte(addr); 
  57   1          TM1722_Write_Byte(dat); 
  58   1          TM1722_STB=1;
  59   1      }
  60          
  61          
  62          void TM1722_Write_Byte(uint8_t dat)
  63          {
  64   1        uint8_t i;
  65   1               
  66   1        delay_us(50); //用于片选信号的延时
  67   1        TM1722_STB=0;     //有效的片选信号
  68   1        for(i=0;i<8;i++)
  69   1        {
  70   2         TM1722_CLK = 0;
  71   2         TM1722_DIO = dat&0x01;
  72   2         TM1722_CLK = 1;    //时钟上升沿，送入一位数据
  73   2         dat>>=1;      
  74   2        }
  75   1        delay_us(50);   //用于片选信号的延时
  76   1      }
  77          
  78          void num_dis(uint8_t num)
  79          {
  80   1          enum  ADDR addr;
  81   1          uint8_t hundreds = num / 100;  // 获取百位数
  82   1          uint8_t tens = (num / 10) % 10;  // 获取十位数
  83   1          uint8_t ones = num % 10;  // 获取个位数
  84   1          
  85   1          value_0B &= 0x00;
  86   1          value_0A &= 0X00;
  87   1          value_07 &= 0X00;
  88   1          value_06 &= 0X00;
  89   1          
  90   1          value_0B |= (num_tab[hundreds]>>4);
  91   1          value_0A |= num_tab[hundreds];
  92   1          value_07 |= num_tab[tens];
  93   1          value_06 |= num_tab[ones]; 
  94   1      
  95   1          if((num<10)&&(num>=0))
  96   1          {
  97   2              lcd_write_val(addr_tab[ADDR_0B],0x00);
  98   2      
  99   2              lcd_write_val(addr_tab[ADDR_0A],0X00);
 100   2              
 101   2              lcd_write_val(addr_tab[ADDR_07],0X00);
 102   2      
 103   2              lcd_write_val(addr_tab[ADDR_06],value_06);  
 104   2          }
 105   1          else if((num<100)&&(num>=10))
 106   1          {
 107   2              lcd_write_val(addr_tab[ADDR_0B],0x00);
 108   2      
 109   2              lcd_write_val(addr_tab[ADDR_0A],0X00);
 110   2              
 111   2              lcd_write_val(addr_tab[ADDR_07],value_07);
 112   2      
 113   2              lcd_write_val(addr_tab[ADDR_06],value_06);   
 114   2          }
 115   1          else
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 3   

 116   1          {
 117   2              lcd_write_val(addr_tab[ADDR_0B],value_0B);
 118   2              
 119   2              lcd_write_val(addr_tab[ADDR_0A],value_0A);
 120   2              
 121   2              lcd_write_val(addr_tab[ADDR_07],value_07);
 122   2      
 123   2              lcd_write_val(addr_tab[ADDR_06],value_06);
 124   2          }
 125   1          
 126   1      }
*** WARNING C280 IN LINE 80 OF ..\BSP\Src\screen.c: 'addr': unreferenced local variable
 127          
 128          void wind_dis(uint8_t num)
 129          {
 130   1          value_0F &= 0x30;
 131   1          
 132   1          switch(num)
 133   1          {
 134   2              case 0:
 135   2                  value_0F |= 0x00;
 136   2                  break;
 137   2              
 138   2              case 1:
 139   2                  value_0F |= 0x40;
 140   2                  break;
 141   2              
 142   2              case 2:
 143   2                  value_0F |= 0xc0;
 144   2                  break;
 145   2              
 146   2              case 3:
 147   2                  value_0F |= 0xc8;
 148   2                  break;
 149   2              
 150   2              case 4:
 151   2                  value_0F |= 0xcc;
 152   2                  break;
 153   2              
 154   2              case 5:
 155   2                  value_0F |= 0xce;
 156   2                  break;
 157   2              
 158   2              case 6:
 159   2                  value_0F |= 0xcf;
 160   2                  break;
 161   2              
 162   2              default:
 163   2                  break;
 164   2          }
 165   1          
 166   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 167   1      }
 168          
 169          void channel_dis(uint8_t num)
 170          {
 171   1          value_0E &= 0x80;
 172   1          value_0B &= 0x00;
 173   1          
 174   1          switch(num)
 175   1          {
 176   2              case 1:
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 4   

 177   2                  value_0E |= 0x04;
 178   2                  value_0B |= 0x40;
 179   2                  break;
 180   2              
 181   2              case 2:
 182   2                  value_0E |= 0x02;
 183   2                  value_0B |= 0x20;
 184   2                  break;
 185   2              
 186   2              case 3:
 187   2                  value_0E |= 0x01;
 188   2                  value_0B |= 0x10;
 189   2                  break;
 190   2              
 191   2              case 4:
 192   2                  value_0E |= 0x06;
 193   2                  value_0B |= 0x60;
 194   2                  break;
 195   2              
 196   2              case 5:
 197   2                  value_0E |= 0x03;
 198   2                  value_0B |= 0x30;
 199   2                  break;
 200   2              
 201   2              case 6:
 202   2                  value_0E |= 0x05;
 203   2                  value_0B |= 0x50;
 204   2                  break;
 205   2              
 206   2              case 7:
 207   2                  value_0E |= 0x07;
 208   2                  value_0B |= 0x70;
 209   2                  break;
 210   2              
 211   2              default:
 212   2                  break;
 213   2          }
 214   1          
 215   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 216   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
 217   1      }
 218          
 219          void sun_dis(bit on_off)
 220          {
 221   1          enum  ADDR addr;
 222   1          value_0E &= 0xf7;
 223   1          if(on_off==DIS_ON)
 224   1          {
 225   2              value_0E |= 0x08;   
 226   2          }
 227   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 228   1          
 229   1      }
*** WARNING C280 IN LINE 221 OF ..\BSP\Src\screen.c: 'addr': unreferenced local variable
 230          
 231          void sync_dis(bit on_off)
 232          {
 233   1          value_03 &= 0xef;
 234   1          if(on_off==DIS_ON)
 235   1          {
 236   2              value_03 |= 0x10;   
 237   2          }
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 5   

 238   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 239   1      }
 240          
 241          void alarm_dis(bit on_off)
 242          {
 243   1          value_03 &= 0xdf;
 244   1          if(on_off==DIS_ON)
 245   1          {
 246   2              value_03 |= 0x20;   
 247   2          }
 248   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 249   1      }
 250          
 251          //void F_dis(bit on_off)
 252          //{
 253          //    value_0E &= 0x7f;
 254          //    if(on_off==DIS_ON)
 255          //    {
 256          //        value_0E |= 0x80;   
 257          //    }
 258          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 259          //}
 260          
 261          //void M_dis(bit on_off)
 262          //{
 263          //    value_0E &= 0xbf;
 264          //    if(on_off==DIS_ON)
 265          //    {
 266          //        value_0E |= 0x40;   
 267          //    }
 268          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 269          //}
 270          
 271          //void R_dis(bit on_off)
 272          //{
 273          //    value_0E &= 0xdf;
 274          //    if(on_off==DIS_ON)
 275          //    {
 276          //        value_0E |= 0x20;   
 277          //    }
 278          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 279          //}
 280          
 281          void celsius_dis(bit on_off)
 282          {
 283   1          value_03 &= 0xbf;
 284   1          if(on_off==DIS_ON)
 285   1          {
 286   2              value_03 |= 0x40;   
 287   2          }
 288   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 289   1      }
 290          
 291          void mode_dis(bit on_off)
 292          {
 293   1          value_03 &= 0x7f;
 294   1          if(on_off==DIS_ON)
 295   1          {
 296   2              value_03 |= 0x80;   
 297   2          }
 298   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 299   1      }
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 6   

 300          
 301          void percentage_dis(bit on_off)
 302          {
 303   1          value_06 &= 0xf7;
 304   1          if(on_off==DIS_ON)
 305   1          {
 306   2              value_06 |= 0x08;   
 307   2          }
 308   1          lcd_write_val(addr_tab[ADDR_06],value_06);
 309   1      }
 310          
 311          //void cur_dis(bit on_off)
 312          //{
 313          //    value_03 &= 0xf7;
 314          //    if(on_off==DIS_ON)
 315          //    {
 316          //        value_03 |= 0x08;   
 317          //    }
 318          //    lcd_write_val(addr_tab[ADDR_03],value_03);
 319          //}
 320          
 321          //void set_dis(bit on_off)
 322          //{
 323          //    value_03 &= 0xfb;
 324          //    if(on_off==DIS_ON)
 325          //    {
 326          //        value_03 |= 0x04;   
 327          //    }
 328          //    lcd_write_val(addr_tab[ADDR_03],value_03);
 329          //}
 330          
 331          void fan_center_dis(bit on_off)
 332          {
 333   1          value_0F &= 0xdf;
 334   1          if(on_off==DIS_ON)
 335   1          {
 336   2              value_0F |= 0x20;   
 337   2          }
 338   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 339   1      }
 340          
 341          void fan_leaf1_dis(bit on_off)
 342          {
 343   1          value_0E &= 0xef;
 344   1          if(on_off==DIS_ON)
 345   1          {
 346   2              value_0E |= 0x10;   
 347   2          }
 348   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 349   1      }
 350          
 351          void fan_leaf2_dis(bit on_off)
 352          {
 353   1          value_0F &= 0xef;
 354   1          if(on_off==DIS_ON)
 355   1          {
 356   2              value_0F |= 0x10;   
 357   2          }
 358   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 359   1      }
 360          
 361          void fan_rotate()
C51 COMPILER V9.60.7.0   SCREEN                                                            11/29/2024 16:35:19 PAGE 7   

 362          {
 363   1          fan_center_dis(DIS_ON);
 364   1          if((wind_bit == 1)&&(wind_num>0))
*** ERROR C202 IN LINE 364 OF ..\BSP\Src\screen.c: 'wind_bit': undefined identifier
 365   1          {
 366   2              fan_leaf1_dis(fan_rotate_flag);
*** ERROR C202 IN LINE 366 OF ..\BSP\Src\screen.c: 'fan_rotate_flag': undefined identifier
 367   2              fan_leaf2_dis(~fan_rotate_flag);
*** ERROR C202 IN LINE 367 OF ..\BSP\Src\screen.c: 'fan_rotate_flag': undefined identifier
 368   2          }
 369   1          else
 370   1          {
 371   2              fan_leaf1_dis(DIS_ON);
 372   2              fan_leaf2_dis(DIS_OFF);
 373   2          }
 374   1      }

C51 COMPILATION COMPLETE.  2 WARNING(S),  3 ERROR(S)
